{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDASMC,EAAM,qCACNC,EAAW,2BAEXC,EAAUC,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,SAC/BE,EAAaH,SAASC,cAAc,gBACpCG,EAAcJ,SAASC,cAAc,cAE3CG,EAAYC,iBAAiB,SAoD7B,WACEC,GAAQ,EACRF,EAAYG,MAAMC,QAAU,OAK5BC,EAH8BP,EAAMQ,MAAMC,OAGVL,EA5ClB,IA4CiCM,MAAK,SAAAC,GAClDC,EAAoBD,EAAOE,MAC3BC,EAAsBC,UACtB,IAAMC,EAAaC,KAAKC,KAAKP,EAAOQ,UA/CxB,IAgDZC,QAAQC,IAAIL,GACZI,QAAQC,IAAIjB,GACRA,IAASY,GAA6B,IAAfA,IACzBd,EAAYG,MAAMC,QAAU,OAC5BgB,EAAAC,GAASC,OAAOC,QACd,8D,IAINvB,EAAYG,MAAMC,QAAU,O,IAvE9BL,EAAWE,iBAAiB,UA+B5B,SAAsBuB,GACpBA,EAAEC,iBA8EF9B,EAAQ+B,UAAY,GACpBxB,EAAO,EACPF,EAAYG,MAAMC,QAAU,OA9E5B,IAAMuB,EAAgB7B,EAAMQ,MAAMC,OAElCF,EAASsB,EAAezB,GAAMM,MAAK,SAAAC,GACjC,GAAsB,KAAlBkB,GAA6C,IAArBlB,EAAOQ,UACjC,OAAOG,EAAAC,GAASC,OAAOC,QACrB,4EAGFH,EAAAC,GAASC,OAAOM,QAAQ,oBAAqCC,OAAjBpB,EAAOQ,UAAU,aAC7DP,EAAoBD,EAAOE,MAE3BX,EAAYG,MAAMC,QAAU,QAC5BQ,EAAsBC,S,OA3C5B,IAAMD,EAAwB,IAAIQ,EAAAU,GAAJ,CAAmB,aAAc,CAC7DC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,IACdC,iBAAkB,EAClBC,eAAgB,GAChBC,UAAW,MAITlC,EAAO,E,SAIIG,EAASgC,EAAYC,G,OAArBC,EAAQC,MAAAC,KAAAC,U,UAARH,I,OAAAA,EAAfnB,EAAA7B,EAAA,CAAA6B,EAAAuB,GAAAC,MAAA,SAAAC,EAAwBR,EAAYC,G,IAE1BQ,EAGArC,E,2FAHiBsC,EAAAC,QAAMC,IAC3B,GAAmBpB,OAAhBnC,EAAS,SAAgBmC,OAATpC,EAAI,OAAgFoC,OAA3EQ,EAAW,kEAAwER,OAARS,EAAQ,iB,cAD3GQ,EAAQI,EAAAC,KAGR1C,EAASqC,EAASM,K,SAGX3C,E,0EAEbS,QAAQmC,MAAKH,EAAAI,I,2DAVMd,MAAAC,KAAAC,U,CAyDvB,SAAShC,EAAoB6C,GAC3B,IAAMC,EAASD,EACZE,KACC,SAAAC,G,IACEC,EAAYD,EAAZC,aACAC,EAAaF,EAAbE,cACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAASP,EAATO,UAEA,MAAO,+CAC+CpC,OAA1C+B,EAAc,8BAAkD/B,OAAtB8B,EAAa,WAAyB9B,OAAhBgC,EAAK,aAGvChC,OAHkDgC,EAAK,8IAM5ChC,OAHXiC,EAAM,sHAMQjC,OAHHkC,EAAM,oIAMFlC,OAHDmC,EAAS,qIAGEnC,OAAVoC,EAAU,8D,IAMtEC,KAAK,IACRvE,EAAQwE,mBAAmB,YAAaX,E,CA3F1CxD,EAAYG,MAAMC,QAAU,M","sources":["src/index.js"],"sourcesContent":["import './sass/gallery-style.scss';\nimport Notiflix from 'notiflix';\n//console.log(Notiflix);\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n//console.log(SimpleLightbox);\nimport axios from 'axios';\n//console.log(axios);\n\nconst KEY = '32856813-557b11f28047fc34e33f2f2e2';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst gallery = document.querySelector('.gallery');\nconst input = document.querySelector('input');\nconst searchForm = document.querySelector('#search-form');\nconst btnLoadMore = document.querySelector('.load-more');\n\nbtnLoadMore.addEventListener('click', onBtnLoadMore);\nsearchForm.addEventListener('submit', onSearchForm);\n\n//const gallerySimpleLightbox = new SimpleLightbox('.gallery a');\nconst gallerySimpleLightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n  scrollZoomFactor: 2,\n  overlayOpacity: 0.9,\n  fadeSpeed: 300,\n});\n\nlet searchRequest = '';\nlet page = 1;\nconst perPage = 40;\nbtnLoadMore.style.display = 'none';\n\nasync function getPhoto(inputValue, pageNum) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?key=${KEY}&q=${inputValue}&image_type=photo&orientation=horizontal&safesearch=true&page=${pageNum}&per_page=40`\n    );\n    const images = response.data;\n    //console.log(images.hits);\n    // console.log(images);\n    return await images;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction onSearchForm(e) {\n  e.preventDefault();\n  clearGallery();\n  const searchRequest = input.value.trim();\n  //   const searchRequest = e.currentTarget.searchQuery.value.trim();\n  getPhoto(searchRequest, page).then(images => {\n    if (searchRequest === '' || images.totalHits === 0) {\n      return Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    } else {\n      Notiflix.Notify.success(`Hooray! We found ${images.totalHits} images.`);\n      renderMarkupGallery(images.hits);\n\n      btnLoadMore.style.display = 'block';\n      gallerySimpleLightbox.refresh();\n    }\n  });\n}\n\nfunction onBtnLoadMore() {\n  page += 1;\n  btnLoadMore.style.display = 'none';\n  //   gallerySimpleLightbox.destroy();\n  const previousSearchRequest = input.value.trim();\n  //console.log(previousSearchRequest);\n\n  getPhoto(previousSearchRequest, page, perPage).then(images => {\n    renderMarkupGallery(images.hits);\n    gallerySimpleLightbox.refresh();\n    const totalPages = Math.ceil(images.totalHits / perPage);\n    console.log(totalPages);\n    console.log(page);\n    if (page === totalPages || totalPages === 1) {\n      btnLoadMore.style.display = 'none';\n      Notiflix.Notify.failure(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n  });\n  btnLoadMore.style.display = 'block';\n}\n\nfunction renderMarkupGallery(arr) {\n  const markup = arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<div class=\"photo-card\">\n         <a href=\"${largeImageURL}\"><img class=\"photo\" src=\"${webformatURL}\" alt=\"${tags}\" title=\"${tags}\" loading=\"lazy\"/></a>\n          <div class=\"info\">\n             <p class=\"info-item\">\n      <b>Likes</b> <span class=\"info-item-api\"> ${likes} </span>\n  </p>\n              <p class=\"info-item\">\n                  <b>Views</b> <span class=\"info-item-api\">${views}</span>\n              </p>\n              <p class=\"info-item\">\n                  <b>Comments</b> <span class=\"info-item-api\">${comments}</span>\n              </p>\n              <p class=\"info-item\">\n                  <b>Downloads</b> <span class=\"info-item-api\">${downloads}</span>\n              </p>\n          </div>\n      </div>`;\n      }\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearGallery() {\n  gallery.innerHTML = '';\n  page = 1;\n  btnLoadMore.style.display = 'none';\n}\n"],"names":["$bpxeT","parcelRequire","$b8f9b7833fa37166$var$KEY","$b8f9b7833fa37166$var$BASE_URL","$b8f9b7833fa37166$var$gallery","document","querySelector","$b8f9b7833fa37166$var$input","$b8f9b7833fa37166$var$searchForm","$b8f9b7833fa37166$var$btnLoadMore","addEventListener","$b8f9b7833fa37166$var$page","style","display","$b8f9b7833fa37166$var$getPhoto","value","trim","then","images","$b8f9b7833fa37166$var$renderMarkupGallery","hits","$b8f9b7833fa37166$var$gallerySimpleLightbox","refresh","totalPages","Math","ceil","totalHits","console","log","$parcel$interopDefault","$6JpON","Notify","failure","e","preventDefault","innerHTML","searchRequest1","success","concat","$5IjG7","captionsData","captionPosition","captionDelay","scrollZoomFactor","overlayOpacity","fadeSpeed","inputValue","pageNum","$b8f9b7833fa37166$var$_getPhoto","apply","this","arguments","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","data","error","t0","arr","markup","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML"],"version":3,"file":"gallery.2f583a14.js.map"}